// Code generated by protoc-gen-go.
// source: managerdb.proto
// DO NOT EDIT!

/*
Package managerdb is a generated protocol buffer package.

It is generated from these files:
	managerdb.proto

It has these top-level messages:
	Db
	Sector
	Set
	ContractHistory
*/
package managerdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Db struct {
	Sectors          map[int64]*Sector           `protobuf:"bytes,1,rep,name=sectors" json:"sectors,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sets             []*Set                      `protobuf:"bytes,2,rep,name=sets" json:"sets,omitempty"`
	Ndata            int32                       `protobuf:"zigzag32,3,opt,name=ndata" json:"ndata,omitempty"`
	Nparity          int32                       `protobuf:"zigzag32,4,opt,name=nparity" json:"nparity,omitempty"`
	SectorSize       int32                       `protobuf:"zigzag32,5,opt,name=sector_size,json=sectorSize" json:"sector_size,omitempty"`
	ContractsHistory map[string]*ContractHistory `protobuf:"bytes,6,rep,name=contracts_history,json=contractsHistory" json:"contracts_history,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Pending          []int64                     `protobuf:"zigzag64,7,rep,packed,name=pending" json:"pending,omitempty"`
}

func (m *Db) Reset()                    { *m = Db{} }
func (m *Db) String() string            { return proto.CompactTextString(m) }
func (*Db) ProtoMessage()               {}
func (*Db) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Db) GetSectors() map[int64]*Sector {
	if m != nil {
		return m.Sectors
	}
	return nil
}

func (m *Db) GetSets() []*Set {
	if m != nil {
		return m.Sets
	}
	return nil
}

func (m *Db) GetNdata() int32 {
	if m != nil {
		return m.Ndata
	}
	return 0
}

func (m *Db) GetNparity() int32 {
	if m != nil {
		return m.Nparity
	}
	return 0
}

func (m *Db) GetSectorSize() int32 {
	if m != nil {
		return m.SectorSize
	}
	return 0
}

func (m *Db) GetContractsHistory() map[string]*ContractHistory {
	if m != nil {
		return m.ContractsHistory
	}
	return nil
}

func (m *Db) GetPending() []int64 {
	if m != nil {
		return m.Pending
	}
	return nil
}

type Sector struct {
	// If uploaded.
	Contract   []byte `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	MerkleRoot []byte `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	// If not uploaded.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Sector) Reset()                    { *m = Sector{} }
func (m *Sector) String() string            { return proto.CompactTextString(m) }
func (*Sector) ProtoMessage()               {}
func (*Sector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Sector) GetContract() []byte {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *Sector) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Sector) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Set struct {
	DataIds   []int64 `protobuf:"zigzag64,1,rep,packed,name=data_ids,json=dataIds" json:"data_ids,omitempty"`
	ParityIds []int64 `protobuf:"zigzag64,2,rep,packed,name=parity_ids,json=parityIds" json:"parity_ids,omitempty"`
}

func (m *Set) Reset()                    { *m = Set{} }
func (m *Set) String() string            { return proto.CompactTextString(m) }
func (*Set) ProtoMessage()               {}
func (*Set) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Set) GetDataIds() []int64 {
	if m != nil {
		return m.DataIds
	}
	return nil
}

func (m *Set) GetParityIds() []int64 {
	if m != nil {
		return m.ParityIds
	}
	return nil
}

type ContractHistory struct {
	ReadsTotalMs   int64                      `protobuf:"zigzag64,1,opt,name=reads_total_ms,json=readsTotalMs" json:"reads_total_ms,omitempty"`
	ReadsNumber    int64                      `protobuf:"zigzag64,2,opt,name=reads_number,json=readsNumber" json:"reads_number,omitempty"`
	ReadsFailures  int64                      `protobuf:"zigzag64,3,opt,name=reads_failures,json=readsFailures" json:"reads_failures,omitempty"`
	WritesNumber   int64                      `protobuf:"zigzag64,4,opt,name=writes_number,json=writesNumber" json:"writes_number,omitempty"`
	WritesFailures int64                      `protobuf:"zigzag64,5,opt,name=writes_failures,json=writesFailures" json:"writes_failures,omitempty"`
	LastFailure    *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=last_failure,json=lastFailure" json:"last_failure,omitempty"`
}

func (m *ContractHistory) Reset()                    { *m = ContractHistory{} }
func (m *ContractHistory) String() string            { return proto.CompactTextString(m) }
func (*ContractHistory) ProtoMessage()               {}
func (*ContractHistory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ContractHistory) GetReadsTotalMs() int64 {
	if m != nil {
		return m.ReadsTotalMs
	}
	return 0
}

func (m *ContractHistory) GetReadsNumber() int64 {
	if m != nil {
		return m.ReadsNumber
	}
	return 0
}

func (m *ContractHistory) GetReadsFailures() int64 {
	if m != nil {
		return m.ReadsFailures
	}
	return 0
}

func (m *ContractHistory) GetWritesNumber() int64 {
	if m != nil {
		return m.WritesNumber
	}
	return 0
}

func (m *ContractHistory) GetWritesFailures() int64 {
	if m != nil {
		return m.WritesFailures
	}
	return 0
}

func (m *ContractHistory) GetLastFailure() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastFailure
	}
	return nil
}

func init() {
	proto.RegisterType((*Db)(nil), "managerdb.Db")
	proto.RegisterType((*Sector)(nil), "managerdb.Sector")
	proto.RegisterType((*Set)(nil), "managerdb.Set")
	proto.RegisterType((*ContractHistory)(nil), "managerdb.ContractHistory")
}

func init() { proto.RegisterFile("managerdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x55, 0x92, 0xfe, 0x59, 0x6f, 0xb3, 0x76, 0xbd, 0xfa, 0xfd, 0x24, 0x53, 0x09, 0xad, 0x74,
	0xa0, 0xe5, 0x29, 0x43, 0x83, 0x07, 0x84, 0x84, 0x78, 0x60, 0x20, 0xf6, 0x30, 0x84, 0xdc, 0xbd,
	0xf0, 0x14, 0x39, 0x8d, 0x57, 0xa2, 0x25, 0x71, 0x65, 0xbb, 0xa0, 0xee, 0x43, 0xf0, 0xc5, 0xf8,
	0x52, 0x28, 0x76, 0x1c, 0xd2, 0x89, 0xb7, 0xdc, 0x73, 0xce, 0x3d, 0xf7, 0xd8, 0x37, 0x86, 0x69,
	0xc9, 0x2a, 0xb6, 0xe1, 0x32, 0x4b, 0xe3, 0xad, 0x14, 0x5a, 0xe0, 0xa8, 0x05, 0xe6, 0xa7, 0x1b,
	0x21, 0x36, 0x05, 0xbf, 0x30, 0x44, 0xba, 0xbb, 0xbb, 0xd0, 0x79, 0xc9, 0x95, 0x66, 0xe5, 0xd6,
	0x6a, 0x97, 0xbf, 0x03, 0xf0, 0xaf, 0x52, 0x7c, 0x0d, 0x43, 0xc5, 0xd7, 0x5a, 0x48, 0x45, 0xbc,
	0x45, 0x10, 0x8d, 0x2f, 0xe7, 0xf1, 0x5f, 0xd7, 0xab, 0x34, 0x5e, 0x59, 0xf2, 0x63, 0xa5, 0xe5,
	0x9e, 0x3a, 0x29, 0x2e, 0xa1, 0xa7, 0xb8, 0x56, 0xc4, 0x37, 0x2d, 0x93, 0x4e, 0xcb, 0x8a, 0x6b,
	0x6a, 0x38, 0xfc, 0x0f, 0xfa, 0x55, 0xc6, 0x34, 0x23, 0xc1, 0xc2, 0x8b, 0x66, 0xd4, 0x16, 0x48,
	0x60, 0x58, 0x6d, 0x99, 0xcc, 0xf5, 0x9e, 0xf4, 0x0c, 0xee, 0x4a, 0x3c, 0x85, 0xb1, 0xb5, 0x4f,
	0x54, 0xfe, 0xc0, 0x49, 0xdf, 0xb0, 0x60, 0xa1, 0x55, 0xfe, 0xc0, 0xf1, 0x2b, 0xcc, 0xd6, 0xa2,
	0xd2, 0x92, 0xad, 0xb5, 0x4a, 0xbe, 0xe7, 0x4a, 0x0b, 0xb9, 0x27, 0x03, 0x93, 0xe0, 0xec, 0x30,
	0xf4, 0x07, 0x27, 0xfb, 0x6c, 0x55, 0x36, 0xfd, 0xc9, 0xfa, 0x11, 0x5c, 0x87, 0xd9, 0xf2, 0x2a,
	0xcb, 0xab, 0x0d, 0x19, 0x2e, 0x82, 0x08, 0xa9, 0x2b, 0xe7, 0x37, 0x10, 0x76, 0x4f, 0x8e, 0x27,
	0x10, 0xdc, 0xf3, 0x3d, 0xf1, 0x16, 0x5e, 0x84, 0xb4, 0xfe, 0xc4, 0x73, 0xe8, 0xff, 0x60, 0xc5,
	0x8e, 0x13, 0x7f, 0xe1, 0x45, 0xe3, 0xcb, 0xd9, 0xc1, 0x1d, 0xd4, 0x9d, 0xd4, 0xf2, 0x6f, 0xfd,
	0x37, 0xde, 0x3c, 0x81, 0xff, 0xff, 0x99, 0xa9, 0xeb, 0x3b, 0xb2, 0xbe, 0x2f, 0x0f, 0x7d, 0xbb,
	0xeb, 0x70, 0x16, 0x8d, 0x43, 0x67, 0xc0, 0xf2, 0x1b, 0x0c, 0xec, 0x54, 0x9c, 0xc3, 0x91, 0x3b,
	0xa7, 0xb1, 0x0d, 0x69, 0x5b, 0xd7, 0x57, 0x5c, 0x72, 0x79, 0x5f, 0xf0, 0x44, 0x0a, 0xa1, 0xcd,
	0x84, 0x90, 0x82, 0x85, 0xa8, 0x10, 0x1a, 0x11, 0x7a, 0xed, 0xca, 0x42, 0x6a, 0xbe, 0x97, 0xef,
	0x21, 0x58, 0x71, 0x8d, 0x4f, 0xe0, 0xa8, 0x2e, 0x93, 0x3c, 0xb3, 0x7f, 0x0a, 0xd2, 0x61, 0x5d,
	0x5f, 0x67, 0x0a, 0x9f, 0x02, 0xd8, 0x1d, 0x1a, 0xd2, 0x37, 0xe4, 0xc8, 0x22, 0xd7, 0x99, 0x5a,
	0xfe, 0xf2, 0x61, 0xfa, 0x28, 0x3a, 0x3e, 0x87, 0x89, 0xe4, 0x2c, 0x53, 0x89, 0x16, 0x9a, 0x15,
	0x49, 0xa9, 0x9a, 0xab, 0x0d, 0x0d, 0x7a, 0x5b, 0x83, 0x37, 0x0a, 0x9f, 0x81, 0xad, 0x93, 0x6a,
	0x57, 0xa6, 0x5c, 0x9a, 0xc0, 0x48, 0xc7, 0x06, 0xfb, 0x62, 0x20, 0x7c, 0xe1, 0x8c, 0xee, 0x58,
	0x5e, 0xec, 0x24, 0x57, 0x26, 0x3b, 0xd2, 0x63, 0x83, 0x7e, 0x6a, 0x40, 0x3c, 0x83, 0xe3, 0x9f,
	0x32, 0xd7, 0xbc, 0xb5, 0xea, 0xd9, 0x71, 0x16, 0x6c, 0xbc, 0xce, 0x61, 0xda, 0x88, 0x5a, 0xb3,
	0xbe, 0x91, 0x4d, 0x2c, 0xdc, 0xba, 0xbd, 0x83, 0xb0, 0x60, 0x4a, 0x3b, 0x19, 0x19, 0x34, 0xab,
	0xb2, 0x6f, 0x2e, 0x76, 0x6f, 0x2e, 0xbe, 0x75, 0x6f, 0x8e, 0x8e, 0x6b, 0x7d, 0xd3, 0x9f, 0x0e,
	0x8c, 0xe0, 0xd5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x9b, 0x2a, 0x99, 0xc0, 0x03, 0x00,
	0x00,
}
