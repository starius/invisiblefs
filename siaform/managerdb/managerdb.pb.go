// Code generated by protoc-gen-go.
// source: managerdb.proto
// DO NOT EDIT!

/*
Package managerdb is a generated protocol buffer package.

It is generated from these files:
	managerdb.proto

It has these top-level messages:
	Db
	Sector
	Set
	Latency
*/
package managerdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Db struct {
	Sectors      map[int64]*Sector   `protobuf:"bytes,1,rep,name=sectors" json:"sectors,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Sets         []*Set              `protobuf:"bytes,2,rep,name=sets" json:"sets,omitempty"`
	Ndata        int32               `protobuf:"zigzag32,3,opt,name=ndata" json:"ndata,omitempty"`
	Nparity      int32               `protobuf:"zigzag32,4,opt,name=nparity" json:"nparity,omitempty"`
	SectorSize   int32               `protobuf:"zigzag32,5,opt,name=sector_size,json=sectorSize" json:"sector_size,omitempty"`
	ReadsHistory map[string]*Latency `protobuf:"bytes,6,rep,name=reads_history,json=readsHistory" json:"reads_history,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Db) Reset()                    { *m = Db{} }
func (m *Db) String() string            { return proto.CompactTextString(m) }
func (*Db) ProtoMessage()               {}
func (*Db) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Db) GetSectors() map[int64]*Sector {
	if m != nil {
		return m.Sectors
	}
	return nil
}

func (m *Db) GetSets() []*Set {
	if m != nil {
		return m.Sets
	}
	return nil
}

func (m *Db) GetNdata() int32 {
	if m != nil {
		return m.Ndata
	}
	return 0
}

func (m *Db) GetNparity() int32 {
	if m != nil {
		return m.Nparity
	}
	return 0
}

func (m *Db) GetSectorSize() int32 {
	if m != nil {
		return m.SectorSize
	}
	return 0
}

func (m *Db) GetReadsHistory() map[string]*Latency {
	if m != nil {
		return m.ReadsHistory
	}
	return nil
}

type Sector struct {
	// If uploaded.
	Contract   []byte `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	MerkleRoot []byte `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	// If not uploaded.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Sector) Reset()                    { *m = Sector{} }
func (m *Sector) String() string            { return proto.CompactTextString(m) }
func (*Sector) ProtoMessage()               {}
func (*Sector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Sector) GetContract() []byte {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *Sector) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Sector) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Set struct {
	DataIds   []int64 `protobuf:"zigzag64,1,rep,packed,name=data_ids,json=dataIds" json:"data_ids,omitempty"`
	ParityIds []int64 `protobuf:"zigzag64,2,rep,packed,name=parity_ids,json=parityIds" json:"parity_ids,omitempty"`
}

func (m *Set) Reset()                    { *m = Set{} }
func (m *Set) String() string            { return proto.CompactTextString(m) }
func (*Set) ProtoMessage()               {}
func (*Set) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Set) GetDataIds() []int64 {
	if m != nil {
		return m.DataIds
	}
	return nil
}

func (m *Set) GetParityIds() []int64 {
	if m != nil {
		return m.ParityIds
	}
	return nil
}

type Latency struct {
	TotalMs int64 `protobuf:"zigzag64,1,opt,name=total_ms,json=totalMs" json:"total_ms,omitempty"`
	Count   int64 `protobuf:"zigzag64,2,opt,name=count" json:"count,omitempty"`
}

func (m *Latency) Reset()                    { *m = Latency{} }
func (m *Latency) String() string            { return proto.CompactTextString(m) }
func (*Latency) ProtoMessage()               {}
func (*Latency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Latency) GetTotalMs() int64 {
	if m != nil {
		return m.TotalMs
	}
	return 0
}

func (m *Latency) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Db)(nil), "managerdb.Db")
	proto.RegisterType((*Sector)(nil), "managerdb.Sector")
	proto.RegisterType((*Set)(nil), "managerdb.Set")
	proto.RegisterType((*Latency)(nil), "managerdb.Latency")
}

func init() { proto.RegisterFile("managerdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x3f, 0xef, 0xda, 0x30,
	0x10, 0x55, 0x12, 0x20, 0x70, 0xa4, 0x7f, 0x38, 0x75, 0x70, 0x23, 0x55, 0x44, 0x59, 0x9a, 0x89,
	0x81, 0x76, 0xa8, 0x58, 0xba, 0x50, 0xa9, 0x48, 0x65, 0x71, 0xa6, 0x4e, 0x91, 0x93, 0x58, 0x6d,
	0x04, 0xc4, 0xc8, 0x3e, 0x2a, 0x85, 0x6f, 0xd2, 0x6f, 0x5b, 0xc5, 0x06, 0x1a, 0xf4, 0xdb, 0xfc,
	0xde, 0xbb, 0x7b, 0x77, 0xf6, 0x33, 0xbc, 0x39, 0x89, 0x56, 0xfc, 0x92, 0xba, 0x2e, 0x57, 0x67,
	0xad, 0x48, 0xe1, 0xec, 0x41, 0xa4, 0x7f, 0x03, 0xf0, 0xb7, 0x25, 0x7e, 0x86, 0xd0, 0xc8, 0x8a,
	0x94, 0x36, 0xcc, 0x4b, 0x82, 0x6c, 0xbe, 0x8e, 0x57, 0xff, 0x9b, 0xb6, 0xe5, 0x2a, 0x77, 0xe2,
	0xb7, 0x96, 0x74, 0xc7, 0xef, 0xa5, 0x98, 0xc2, 0xc8, 0x48, 0x32, 0xcc, 0xb7, 0x2d, 0xaf, 0x07,
	0x2d, 0xb9, 0x24, 0x6e, 0x35, 0x7c, 0x07, 0xe3, 0xb6, 0x16, 0x24, 0x58, 0x90, 0x78, 0xd9, 0x82,
	0x3b, 0x80, 0x0c, 0xc2, 0xf6, 0x2c, 0x74, 0x43, 0x1d, 0x1b, 0x59, 0xfe, 0x0e, 0x71, 0x09, 0x73,
	0x67, 0x5f, 0x98, 0xe6, 0x2a, 0xd9, 0xd8, 0xaa, 0xe0, 0xa8, 0xbc, 0xb9, 0x4a, 0xdc, 0xc2, 0x2b,
	0x2d, 0x45, 0x6d, 0x8a, 0xdf, 0x8d, 0x21, 0xa5, 0x3b, 0x36, 0xb1, 0xd3, 0x97, 0xcf, 0x0b, 0xf3,
	0xbe, 0xe4, 0xbb, 0xab, 0x70, 0x5b, 0x47, 0x7a, 0x40, 0xc5, 0x7b, 0x88, 0x86, 0x77, 0xc2, 0xb7,
	0x10, 0x1c, 0x64, 0xc7, 0xbc, 0xc4, 0xcb, 0x90, 0xf7, 0x47, 0xfc, 0x08, 0xe3, 0x3f, 0xe2, 0x78,
	0x91, 0xcc, 0x4f, 0xbc, 0x6c, 0xbe, 0x5e, 0x3c, 0xdd, 0xae, 0xef, 0xe4, 0x4e, 0xdf, 0xf8, 0x5f,
	0xbc, 0x38, 0x87, 0xc5, 0x8b, 0x89, 0x43, 0xcf, 0x99, 0xf3, 0xcc, 0x9e, 0x3d, 0x71, 0xe0, 0xf9,
	0x43, 0x90, 0x6c, 0xab, 0x6e, 0x60, 0x9a, 0xfe, 0x84, 0x89, 0x9b, 0x84, 0x31, 0x4c, 0x2b, 0xd5,
	0x92, 0x16, 0x15, 0x59, 0xbb, 0x88, 0x3f, 0x70, 0xff, 0x60, 0x27, 0xa9, 0x0f, 0x47, 0x59, 0x68,
	0xa5, 0xc8, 0x3a, 0x47, 0x1c, 0x1c, 0xc5, 0x95, 0x22, 0x44, 0x18, 0x3d, 0x02, 0x88, 0xb8, 0x3d,
	0xa7, 0x5f, 0x21, 0xc8, 0x25, 0xe1, 0x7b, 0x98, 0xf6, 0xb0, 0x68, 0x6a, 0x97, 0x3b, 0xf2, 0xb0,
	0xc7, 0xbb, 0xda, 0xe0, 0x07, 0x00, 0x97, 0x88, 0x15, 0x7d, 0x2b, 0xce, 0x1c, 0xb3, 0xab, 0x4d,
	0xba, 0x81, 0xf0, 0xb6, 0x71, 0x6f, 0x42, 0x8a, 0xc4, 0xb1, 0x38, 0x99, 0xdb, 0xfb, 0x85, 0x16,
	0xef, 0x6d, 0xf8, 0x95, 0xba, 0xb4, 0x6e, 0x2b, 0xe4, 0x0e, 0x94, 0x13, 0xfb, 0x0b, 0x3f, 0xfd,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0x65, 0x11, 0x2c, 0x08, 0x98, 0x02, 0x00, 0x00,
}
