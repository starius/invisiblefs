// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package zipkv is a generated protocol buffer package.

It is generated from these files:
	db.proto

It has these top-level messages:
	Location
	HistoryRecord
	Db
*/
package zipkv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Location struct {
	BackendFile int32 `protobuf:"zigzag32,1,opt,name=backend_file,json=backendFile" json:"backend_file,omitempty"`
	Offset      int32 `protobuf:"zigzag32,2,opt,name=offset" json:"offset,omitempty"`
	Size        int32 `protobuf:"zigzag32,3,opt,name=size" json:"size,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Location) GetBackendFile() int32 {
	if m != nil {
		return m.BackendFile
	}
	return 0
}

func (m *Location) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Location) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type HistoryRecord struct {
	Filename string    `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
}

func (m *HistoryRecord) Reset()                    { *m = HistoryRecord{} }
func (m *HistoryRecord) String() string            { return proto.CompactTextString(m) }
func (*HistoryRecord) ProtoMessage()               {}
func (*HistoryRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HistoryRecord) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *HistoryRecord) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Db struct {
	FrontendFiles   map[string]*Location `protobuf:"bytes,1,rep,name=frontend_files,json=frontendFiles" json:"frontend_files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NextBackendFile int32                `protobuf:"zigzag32,2,opt,name=next_backend_file,json=nextBackendFile" json:"next_backend_file,omitempty"`
	History         []*HistoryRecord     `protobuf:"bytes,3,rep,name=history" json:"history,omitempty"`
}

func (m *Db) Reset()                    { *m = Db{} }
func (m *Db) String() string            { return proto.CompactTextString(m) }
func (*Db) ProtoMessage()               {}
func (*Db) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Db) GetFrontendFiles() map[string]*Location {
	if m != nil {
		return m.FrontendFiles
	}
	return nil
}

func (m *Db) GetNextBackendFile() int32 {
	if m != nil {
		return m.NextBackendFile
	}
	return 0
}

func (m *Db) GetHistory() []*HistoryRecord {
	if m != nil {
		return m.History
	}
	return nil
}

func init() {
	proto.RegisterType((*Location)(nil), "zipkv.Location")
	proto.RegisterType((*HistoryRecord)(nil), "zipkv.HistoryRecord")
	proto.RegisterType((*Db)(nil), "zipkv.Db")
}

func init() { proto.RegisterFile("db.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0x62, 0x6b, 0x9c, 0x58, 0x6b, 0x07, 0x91, 0x50, 0x3c, 0xd4, 0x80, 0x50, 0x14,
	0x72, 0xa8, 0x17, 0xf1, 0xa8, 0xb5, 0x78, 0xf0, 0xe2, 0x9e, 0xf4, 0x54, 0xf2, 0x67, 0x83, 0x4b,
	0xe2, 0x6e, 0xd9, 0x5d, 0x8b, 0xe9, 0x27, 0xf7, 0x28, 0xd9, 0x6c, 0x4a, 0x8b, 0x78, 0x9b, 0x99,
	0x37, 0x79, 0xf3, 0x7e, 0x59, 0xf0, 0xf3, 0x34, 0x5e, 0x49, 0xa1, 0x05, 0xf6, 0x36, 0x6c, 0x55,
	0xae, 0xa3, 0x77, 0xf0, 0x5f, 0x44, 0x96, 0x68, 0x26, 0x38, 0x5e, 0xc2, 0x71, 0x9a, 0x64, 0x25,
	0xe5, 0xf9, 0xb2, 0x60, 0x15, 0x0d, 0x9d, 0x89, 0x33, 0x1d, 0x91, 0xc0, 0xce, 0x16, 0xac, 0xa2,
	0x78, 0x0e, 0x7d, 0x51, 0x14, 0x8a, 0xea, 0xd0, 0x35, 0xa2, 0xed, 0x10, 0xe1, 0x40, 0xb1, 0x0d,
	0x0d, 0x3d, 0x33, 0x35, 0x75, 0xf4, 0x06, 0x83, 0x67, 0xa6, 0xb4, 0x90, 0x35, 0xa1, 0x99, 0x90,
	0x39, 0x8e, 0xc1, 0x6f, 0x7c, 0x79, 0xf2, 0xd9, 0x7a, 0x1f, 0x91, 0x6d, 0x8f, 0x37, 0xe0, 0x57,
	0x36, 0x87, 0xb1, 0x0e, 0x66, 0xc3, 0xd8, 0x24, 0x8c, 0xbb, 0x78, 0x64, 0xbb, 0x10, 0xfd, 0x38,
	0xe0, 0xce, 0x53, 0x7c, 0x84, 0x93, 0x42, 0x0a, 0xae, 0xbb, 0xc0, 0x2a, 0x74, 0x26, 0xde, 0x34,
	0x98, 0x5d, 0xd8, 0x2f, 0xe7, 0x69, 0xbc, 0xb0, 0x7a, 0x13, 0x5e, 0x3d, 0x71, 0x2d, 0x6b, 0x32,
	0x28, 0x76, 0x67, 0x78, 0x0d, 0x23, 0x4e, 0xbf, 0xf5, 0x72, 0x8f, 0xbc, 0x85, 0x1b, 0x36, 0xc2,
	0xc3, 0x0e, 0x7d, 0x0c, 0x87, 0x1f, 0x2d, 0x51, 0xe8, 0x99, 0x4b, 0x67, 0xf6, 0xd2, 0x1e, 0x27,
	0xe9, 0x96, 0xc6, 0xaf, 0x80, 0x7f, 0x03, 0xe0, 0x29, 0x78, 0x25, 0xad, 0xed, 0x1f, 0x68, 0x4a,
	0xbc, 0x82, 0xde, 0x3a, 0xa9, 0xbe, 0xe8, 0x7f, 0xe4, 0xad, 0x7a, 0xef, 0xde, 0x39, 0x69, 0xdf,
	0xbc, 0xde, 0xed, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0xea, 0x72, 0x42, 0xc9, 0x01, 0x00,
	0x00,
}
